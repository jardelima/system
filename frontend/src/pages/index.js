import { Palanquin } from "next/font/google";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";

import { useState } from "react";
import { useDispatch } from "react-redux";

import Error from "@/components/Error";
import Loading from "@/components/Loading";

import { authUser } from "@/store/userSlice";
import axios from "axios";
import { ErrorMessage, Field, Form, Formik } from "formik";
import { object, string } from "yup";

const palanquin = Palanquin({
    weight: ["400", "700"],
    subsets: ["latin"],
    variable: "--font-palanquin"
});

const loginSchema = object({
    email: string().email("E-mail inválido!").required("Campo obrigatório!"),
    password: string().required("Campo obrigatório")
});

function Home() {
    const [error, setError] = useState("");
    const [isFail, setIsFail] = useState(false);
    const [isLoading, setIsLoading] = useState(false);

    const router = useRouter();

    const dispatch = useDispatch();

    const initialValues = {
        email: "",
        password: ""
    };

    const handleSubmit = async (values, { setSubmitting }) => {
        setIsLoading(true);
        setIsFail(false);

        try {
            axios
                .post(`http://localhost:8080/login`, {
                    email: values.email,
                    password: values.password
                })
                .then((response) => {
                    router.push("/dashboard");
                    dispatch(authUser(response.data.userData.id));
                    localStorage.setItem("token", response.data.userData.token);
                    localStorage.setItem("id", response.data.userData.id);
                })
                .catch((error) => {
                    console.log(error);
                    setIsFail(true);
                    setError(error.response.data.message);
                });
        } catch (error) {
            console.log(error);
        } finally {
            setSubmitting(false);
            setIsLoading(false);
        }
    };

    return (
        <>
            <Head>
                <title>SYSTEM</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {isLoading && <Loading />}
            {isFail && <Error active={true} message={error} />}

            <section className="bg-beige flex items-center justify-center w-full h-screen">
                <div className="bg-white p-8 w-full max-w-md rounded-md flex flex-col items-center justify-center shadow-md">
                    <Image
                        className="block w-auto object-contain mb-5"
                        src={"/logo.svg"}
                        width={139}
                        height={32}
                        alt="Logo do sistema chamado System."
                    />

                    <Formik
                        onSubmit={handleSubmit}
                        initialValues={initialValues}
                        validationSchema={loginSchema}
                        validateOnMount={true}
                    >
                        {({ isSubmitting }) => (
                            <Form className="flex flex-col items-start justify-start w-full">
                                <div className="flex items-start justify-start flex-col w-full mb-5">
                                    <Field
                                        className={`
                                    ${palanquin.variable}
                                    w-full p-2 bg-white rounded-md border border-border focus:border-green outline-none mb-4 text-sm text-gray-300
                                `}
                                        type="text"
                                        id="email"
                                        name="email"
                                        placeholder="exemplo@email.com"
                                    />
                                    <ErrorMessage
                                        className={`${palanquin.variable} text-red text-xs uppercase font-bold`}
                                        name="email"
                                        component="span"
                                    />
                                </div>

                                <div className="flex items-start justify-start flex-col w-full mb-5">
                                    <Field
                                        className={`
                                    ${palanquin.variable}
                                    w-full p-2 bg-white rounded-md border border-border focus:border-green outline-none mb-4 text-sm text-gray-300
                                `}
                                        type="password"
                                        id="password"
                                        name="password"
                                        placeholder="******"
                                    />
                                    <ErrorMessage
                                        className={`${palanquin.variable} text-red text-xs uppercase font-bold`}
                                        name="password"
                                        component="span"
                                    />
                                </div>

                                <input
                                    disabled={isSubmitting}
                                    className={`
                                    ${palanquin.variable}
                                    w-full max-w-xs mx-auto bg-green hover:brightness-95 duration-300 text-white uppercase text-xs font-bold border-0 rounded-md py-2 px-4 mb-2 flex items-center justify-center cursor-pointer
                                `}
                                    type="submit"
                                    id="submit"
                                    value={"Login"}
                                />
                            </Form>
                        )}
                    </Formik>

                    <p
                        className={`
                            ${palanquin.variable}
                            text-sm text-text font-palanquin
                        `}
                    >
                        <Link className="underline mr-1" href={"/register"}>
                            Cadastre-se
                        </Link>
                        agora e teste gratuitamente.
                    </p>
                </div>
            </section>
        </>
    );
}

export default Home;
